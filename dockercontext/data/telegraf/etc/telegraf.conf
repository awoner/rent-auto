[global_tags]

[agent]
  interval = "5s"
  round_interval = true

  metric_buffer_limit = 10000
  flush_buffer_when_full = true

  collection_jitter = "0s"

  flush_interval = "1s"
  flush_jitter = "0s"

  debug = false
  quiet = false
  hostname = "oleksii"

# Configuration for influxdb server to send metrics to
#[[outputs.influxdb_v2]]
#  urls = ["http://influxdb:8086"] # required
#  # database = "influx"
#  token = "$INFLUXDB_ADMIN_TOKEN"
#  organization = "$INFLUXDB_ADMIN_ORG"
#  bucket = "$INFLUXDB_ADMIN_BUCKET"
#  precision = "s"
#  timeout = "5s"
#  insecure_skip_verify = true

[[outputs.influxdb]]
  urls = ["http://influxdb:8086"] # required
  database = "influx" # required
  precision = "s"
  timeout = "5s"

[[inputs.statsd]]
  protocol = "udp"
  max_tcp_connections = 250
  tcp_keep_alive = false
  service_address = ":8125"

  delete_gauges = true
  delete_counters = true
  delete_sets = true
  delete_timings = true

  percentiles = [90]
  metric_separator = "_"
  parse_data_dog_tags = false
  allowed_pending_messages = 10000
  percentile_limit = 1000

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  fieldexclude = ["time_*"]

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

[[inputs.nstat]]

[[inputs.netstat]]

[[inputs.interrupts]]

[[inputs.linux_sysctl_fs]]
 
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  source_tag = false

  container_name_include = []
  container_name_exclude = []

  timeout = "5s"
  ## Specifies for which classes a per-device metric should be issued
  ## Possible values are 'cpu' (cpu0, cpu1, ...), 'blkio' (8:0, 8:1, ...) and 'network' (eth0, eth1, ...)
  ## Please note that this setting has no effect if 'perdevice' is set to 'true'
  perdevice_include = ["cpu"]
  total = false

  docker_label_include = []
  docker_label_exclude = []

  tag_env = ["JAVA_HOME", "HEAP_SIZE"]

  insecure_skip_verify = false

[[inputs.elasticsearch]]
  servers = ["http://elasticsearch:9200"]
  timeout = "5s"
  local = true
  
  cluster_health = false
  cluster_stats = false
  cluster_stats_only_from_master = true
  
  indices_include = ["_all"]
  indices_level = "shards"

[[inputs.mongodb]]
  servers = ["mongodb://devroot:devroot@mongo:27017/?connect=direct"]
  
[[inputs.nginx]]
  urls = ["http://nginx:85/nginx_status"]
  response_timeout = "5s"
  
[[inputs.prometheus]]
  urls = ["http://rent-auto-api:9005/metrics"]